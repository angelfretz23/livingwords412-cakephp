<?php
namespace App\Controller\Api;

use Cake\Datasource\ConnectionManager;
use Cake\Network\Exception\BadRequestException;

/**
 * Uploads Controller
 * @property \App\Model\Table\SermonTable $Sermon
 * @property \App\Model\Table\TagScriptureTable $TagScripture
 * @property \App\Model\Table\MusicTagsTable $MusicTags
 * @property \App\Model\Table\MovieVerseIdsTable $MovieVerseIds
 * @property \App\Model\Table\MovieTable $Movie
 * @property \App\Model\Table\MovieTagsTable $MovieTags
 * @property \App\Model\Table\MusicTable $Music
 * @property \App\Model\Table\TagsTable $Tags
 * @property \App\Model\Table\UploadVerseIdsTable $UploadVerseIds
 * @property \App\Model\Table\BookTable $Book
 * @property \App\Model\Table\TagBookScriptureTable $TagBookScripture
 * @property \App\Model\Table\BookTagsTable $BookTags
 * @property \App\Model\Table\HighLightsTable $HighLights
 *
 */
class UploadsController extends AppController
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->loadModel('Movie');
        $this->loadModel('MovieTags');
        $this->loadModel('Music');
        $this->loadModel('HighLights');
        $this->loadModel('Sermon');
        $this->loadModel('Tags');
        $this->loadModel('TagScripture');
        $this->loadModel('MovieVerseIds');
        $this->loadModel('MusicTags');
        $this->loadModel('UploadVerseIds');
        $this->loadModel('Book');
        $this->loadModel('BookTags');
        $this->loadModel('TagBookScripture');
    }

    /**
     * @return \Cake\Network\Response|null
     *
     * upload sermon
     */
    public function seremon(){
        if ($this->request->is('post')){
            $data = $this->request->data;
            $data['user_id'] = $this->_User->id;
            $verseIdArr = $data['verse_id_arr'];
            $tags = $data['tags'];

            /**
             * method to save sermon, tags and versions
             */
            $sermon = $this->Sermon->saveSermon($data);
            $tagSave = $this->Tags->saveTags($tags, $sermon->id);
            $uplVerseId = $this->UploadVerseIds->saveVerseId($verseIdArr, $sermon->id);
            
        return $this->jsonResponse('the sermon saved');
        }
        throw new BadRequestException;
    }

    /**
     * @return \Cake\Network\Response|null
     *
     * upload music
     */
    public function music()
    {

        if ($this->request->is('post')) {
            $data = $this->request->data();
            $data['user_id'] = $this->_User->id;
            $tagScriptureArr = $data['tag_scripture'];
            $musicTagsArr = $data['tags'];
            $music = $this->Music->saveMusic($data);
            $tagScripture = $this->TagScripture->saveTagScripture($tagScriptureArr, $music->id);
            $musicTags = $this->MusicTags->saveMusicTags($musicTagsArr, $music->id);
            
            return $this->jsonResponse('the music saved');
        }
        throw new BadRequestException;
    }

    /**
     * @return \Cake\Network\Response|null
     *
     * upload movie
     */
    public function movie()
    {
        if ($this->request->is('post')){
            $data = $this->request->data();
            $data['user_id'] = $this->_User->id;
            $verseIdArr = $data['verse_id_arr'];
            $tags = $data['tags'];
            $movie = $this->Movie->saveMovie($data);
            $musicVerseIds = $this->MovieVerseIds->saveMovieVerseIds($verseIdArr, $movie->id);
            $movieTags = $this->MovieTags->saveTags($tags, $movie->id);
            
          return $this->jsonResponse('the movie saved');
        }
        throw new BadRequestException;
    }

    /**
     * @return \Cake\Network\Response|null
     *
     * upload book
     */
    public function book()
    {
        if($this->request->is('post')){
        $data = $this->request->data();
            $data['user_id'] = $this->_User->id;
            $tagBookScripture = $data['tag_scripture'];
            $bookTags = $data['tags'];

            $book = $this->Book->saveBook($data);
            $tagBookScripture = $this->TagBookScripture->saveTagBookScripture($tagBookScripture, $book->id);
            $bookTags = $this->BookTags->saveBookTags($bookTags, $book->id);

            return $this->jsonResponse('the book saved');

        }
        throw new BadRequestException;

    }

    /**
     * @return \Cake\Network\Response|null
     *
     * highlights
     */
    public function highlights()
    {
        if($this->request->is('post')){
            $data = $this->request->data();
            $data['user_id'] = $this->_User->id;
            $highLight = $this->HighLights->saveHighlight($data);
            if ($highLight){
                return $this->jsonResponse('saved');
            }
            return $this->jsonResponse('not saved');
        }
        throw new BadRequestException;
    }

    /**
     * @return \Cake\Network\Response|null
     *
     * get highlights according to user_id
     */
    public function getHighLights()
    {
        $highLights = $this->HighLights->find()->contain(['BibleBookVerse'])->where(['user_id' => $this->_User->id]);
        return $this->jsonResponse($highLights);
    }

}
