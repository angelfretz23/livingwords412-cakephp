<?php
namespace App\Controller\Api;


use Cake\Event\Event;
use Cake\Network\Exception\BadRequestException;
use Cake\ORM\TableRegistry;

/**
 * Profile Controller
 * @property \App\Model\Table\HistoryTable $History
 * @property \App\Model\Table\MyMediaTable $MyMedia
 * @property \App\Model\Table\FavoritesTable $Favorites
 */
class ProfileController extends AppController
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->loadModel('History');
        $this->loadModel('MyMedia');
        $this->loadModel('Favorites');
    }

    /**
     * @return \Cake\Network\Response|null
     * 
     * save history
     */
    public function saveHistory()
    {

        if ($this->request->is('post')){
            $data = $this->request->data();
            $data['user_id'] = $this->_User->id;
            $history = $this->History->saveHistory($data);
            if ($history){
                return $this->jsonResponse('saved');
            }
            return $this->jsonResponse('not saved');
        }

        throw new BadRequestException;
    }

    /**
     * @return \Cake\Network\Response|null
     * 
     * save media
     */
    public function saveMyMedia()
    {
        if($this->request->is('post')){
            $data = $this->request->data();
            $data['user_id'] = $this->_User->id;
                $media = $this->MyMedia->saveMyMedia($data);
            if ($media){
                return $this->jsonResponse('saved');
            }   return $this->jsonResponse('not saved');
        }
        
        throw new BadRequestException;
    }

    /**
     * @return \Cake\Network\Response|null
     *
     * save favorites
     */
    public function saveFavorites()
    {
        if($this->request->is('post')){
            $data = $this->request->data();
            $data['user_id'] = $this->_User->id;
            $favor = $this->Favorites->saveFavorites($data);
            if ($favor){
                return $this->jsonResponse('saved');
            }   return $this->jsonResponse('not saved');
        }

        throw new BadRequestException;
    }

    /**
     * @return \Cake\Network\Response|null
     * 
     * user view history
     */
    public function getUserProfileHistory()
    {
        if($this->request->is('post')){
            $data = $this->request->data();
            $data['user_id'] = $this->_User->id;;

            $user_id = $data['user_id'];
            /**
             * get all music history
             */
            $hMusic = $this->History->find()->where(['user_history_id' => $user_id, 'media_type' => 'music'])->contain('Music')->toArray();
            /**
             * get all movie history
             */
            $hMovie = $this->History->find()->where(['user_history_id' => $user_id, 'media_type' => 'movie'])->contain('Movie')->toArray();
            /**
             * get all sermon history
             */
            $hSermon = $this->History->find()->where(['user_history_id' => $user_id, 'media_type' => 'sermon'])->contain('Sermon')->toArray();
            /**
             * get all book history
             */
            $hBook = $this->History->find()->where(['user_history_id' => $user_id, 'media_type' => 'book'])->contain('Book')->toArray();

            $generalArray = $this->arrMer($hMusic, $hMovie, $hSermon, $hBook);
            return $this->jsonResponse($generalArray);
        }
        throw new BadRequestException;
    }

    /**
     * @return \Cake\Network\Response|null
     * 
     * user media
     */
    public function getUserMyMedia()
    {
        if($this->request->is('post')){
            $data = $this->request->data();

            $data['user_id'] = $this->_User->id;;

            $user_id = $data['user_id'];
            /**
             * get all music MyMedia
             */
            $hMusic = $this->MyMedia->find()->where(['user_media_id' => $user_id, 'media_type' => 'music'])->contain('Music')->toArray();
            /**
             * get all movie MyMedia
             */
            $hMovie = $this->MyMedia->find()->where(['user_media_id' => $user_id, 'media_type' => 'movie'])->contain('Movie')->toArray();
            /**
             * get all sermon MyMedia
             */
            $hSermon = $this->MyMedia->find()->where(['user_media_id' => $user_id, 'media_type' => 'sermon'])->contain('Sermon')->toArray();
            /**
             * get all book MyMedia
             */
            $hBook = $this->MyMedia->find()->where(['user_media_id' => $user_id, 'media_type' => 'book'])->contain('Book')->toArray();

            $generalArray = $this->arrMer($hMusic, $hMovie, $hSermon, $hBook);
            return $this->jsonResponse($generalArray);
        }
        
        throw new BadRequestException;
    }

    /**
     * @return \Cake\Network\Response|null
     * 
     * user favorites
     */
    public function getUserFavorites()
    {
        if($this->request->is('post')) {
            $data = $this->request->data();
            $data['user_id'] = $this->_User->id;;
      
            $user_id = $data['user_id'];
            /**
             * get all music Favorites
             */
            $hMusic = $this->Favorites->find()->where(['user_favorite_id' => $user_id, 'media_type' => 'music'])->contain('Music')->toArray();
            /**
             * get all movie Favorites
             */
            $hMovie = $this->Favorites->find()->where(['user_favorite_id' => $user_id, 'media_type' => 'movie'])->contain('Movie')->toArray();
            /**
             * get all sermon Favorites
             */
            $hSermon = $this->Favorites->find()->where(['user_favorite_id' => $user_id, 'media_type' => 'sermon'])->contain('Sermon')->toArray();
            /**
             * get all book Favorites
             */
            $hBook = $this->Favorites->find()->where(['user_favorite_id' => $user_id, 'media_type' => 'book'])->contain('Book')->toArray();

            $generalArray = $this->arrMer($hMusic, $hMovie, $hSermon, $hBook);
            return $this->jsonResponse($generalArray);
        }
        
        throw new BadRequestException;
    }

    /**
     * @param $hMusic
     * @param $hMovie
     * @param $hSermon
     * @param $hBook
     * @return array
     *
     * merge arrays music, movie, sermon, book
     */
    public function arrMer($hMusic, $hMovie, $hSermon, $hBook)
    {
        $historyMusic = ['music' => $hMusic];
        $historyMovie = ['movie' => $hMovie];
        $historySermon = ['sermon' => $hSermon];
        $historyBook = ['book' => $hBook];
        $generalArray = array_merge($historyMusic, $historyMovie, $historySermon, $historyBook);
        return $generalArray;
    }

}